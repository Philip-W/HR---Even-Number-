import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
     

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt(); // Number of nodes I think.
        int M = in.nextInt(); // Number of edges (N-1)
        int[][] edges = new int[M][2];
        int answer = 0;
        
        ArrayList<Integer> nodes = new ArrayList<>();
        
        for (int i = 0; i!= M; ++i){ // Read all the edges in.
            int a = in.nextInt();
            int b = in.nextInt();
            edges[i][0] = a;
            edges[i][1] = b;
        }    
        
        //for (int i = 2; i != N + 1; ++i){ nodes.add(i); }
            
        //System.out.println(nodes);
        
            

        
           
            for (int search = N; search != 1; --search){
                int count = 1;
                for (int l = 0; l != N - 1; ++l){
                    if ( (edges[l][1] == search)){
                        count += 1;
                        
                                                
                        
                    }
                }
                    if ( count % 2 == 0 ){
                      for (int l = 0; l != N - 1; ++l){
                         if ( (edges[l][0] == search)){
                             edges[l][0] = -1;
                             edges[l][1] = -1;
                             answer += 1;
                             break;
                             
                         }
                             
                      }
                                                
                        //nodes.remove(nodes.indexOf(search));
                        //System.out.println(nodes);
                        //changed = true;
                           
                    }
                
                
                }
                     


        System.out.println(answer);
    }
}
